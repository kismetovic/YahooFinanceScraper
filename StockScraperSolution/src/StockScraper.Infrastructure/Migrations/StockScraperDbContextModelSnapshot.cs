// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockScraper.Infrastructure.Persistance;

#nullable disable

namespace StockScraper.Infrastructure.Migrations
{
    [DbContext(typeof(StockScraperDbContext))]
    partial class StockScraperDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StockScraper.Domain.Stocks.StockInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DateRetrieved")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfEmployees")
                        .HasColumnType("int");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("YearFounded")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Stocks", (string)null);
                });

            modelBuilder.Entity("StockScraper.Domain.Stocks.StockInfo", b =>
                {
                    b.OwnsOne("StockScraper.Domain.Common.ValueObjects.Location", "Headquarters", b1 =>
                        {
                            b1.Property<Guid>("StockInfoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("HeadquartersCity");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("HeadquartersState");

                            b1.HasKey("StockInfoId");

                            b1.ToTable("Stocks");

                            b1.WithOwner()
                                .HasForeignKey("StockInfoId");
                        });

                    b.OwnsOne("StockScraper.Domain.Common.ValueObjects.MarketCap", "MarketCap", b1 =>
                        {
                            b1.Property<Guid>("StockInfoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("MarketCapCurrency");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("MarketCapValue");

                            b1.HasKey("StockInfoId");

                            b1.ToTable("Stocks");

                            b1.WithOwner()
                                .HasForeignKey("StockInfoId");
                        });

                    b.OwnsOne("StockScraper.Domain.Common.ValueObjects.StockPrice", "Price", b1 =>
                        {
                            b1.Property<Guid>("StockInfoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Open")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("OpenPrice");

                            b1.Property<decimal>("PreviousClose")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("PreviousClosePrice");

                            b1.HasKey("StockInfoId");

                            b1.ToTable("Stocks");

                            b1.WithOwner()
                                .HasForeignKey("StockInfoId");
                        });

                    b.Navigation("Headquarters");

                    b.Navigation("MarketCap");

                    b.Navigation("Price");
                });
#pragma warning restore 612, 618
        }
    }
}
